/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        select_app: select_app {
            compatible = "zmk,behavior-macro";
            label = "SELECT_APP";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(LC(E))) &kp LS(LA(LC(A)))>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp BACKSLASH
                         &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            bindings = <
&kp TILDE   &kp N1             &kp N2             &kp N3             &kp N4  &kp N5       &kp N6     &kp N7     &kp N8     &kp N9     &kp N0         &kp BSPC
&trans      &kp LS(LA(LC(A)))  &kp LS(LA(LC(S)))  &kp S              &kp D   &kp F        &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &kp PAGE_UP    &kp HOME
&kp ESCAPE  &kp LS(LA(LC(E)))  &kp LS(LA(LC(T)))  &kp LS(LA(LC(B)))  &kp R   &kp V        &kp RG(H)  &kp RG(J)  &kp RG(K)  &kp RG(L)  &kp PAGE_DOWN  &kp END
                                                  &kp LGUI           &trans  &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        raise_layer {
            bindings = <
&kp GRAVE  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&trans     &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &trans
&trans     &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &trans
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        tri_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        activate_tri {
            if-layers = <2 2>;
            then-layer = <3>;
        };
    };
};

